/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Idea as PrismaIdea } from "@prisma/client";

export class IdeaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.IdeaCountArgs, "select">): Promise<number> {
    return this.prisma.idea.count(args);
  }

  async ideas(args: Prisma.IdeaFindManyArgs): Promise<PrismaIdea[]> {
    return this.prisma.idea.findMany(args);
  }
  async idea(args: Prisma.IdeaFindUniqueArgs): Promise<PrismaIdea | null> {
    return this.prisma.idea.findUnique(args);
  }
  async createIdea(args: Prisma.IdeaCreateArgs): Promise<PrismaIdea> {
    return this.prisma.idea.create(args);
  }
  async updateIdea(args: Prisma.IdeaUpdateArgs): Promise<PrismaIdea> {
    return this.prisma.idea.update(args);
  }
  async deleteIdea(args: Prisma.IdeaDeleteArgs): Promise<PrismaIdea> {
    return this.prisma.idea.delete(args);
  }
}
